package com.web.hospital.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class historygiaodichExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dbo.historygiaodich
     *
     * @mbg.generated Sun Jun 16 00:56:30 ICT 2024
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dbo.historygiaodich
     *
     * @mbg.generated Sun Jun 16 00:56:30 ICT 2024
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dbo.historygiaodich
     *
     * @mbg.generated Sun Jun 16 00:56:30 ICT 2024
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.historygiaodich
     *
     * @mbg.generated Sun Jun 16 00:56:30 ICT 2024
     */
    public historygiaodichExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.historygiaodich
     *
     * @mbg.generated Sun Jun 16 00:56:30 ICT 2024
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.historygiaodich
     *
     * @mbg.generated Sun Jun 16 00:56:30 ICT 2024
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.historygiaodich
     *
     * @mbg.generated Sun Jun 16 00:56:30 ICT 2024
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.historygiaodich
     *
     * @mbg.generated Sun Jun 16 00:56:30 ICT 2024
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.historygiaodich
     *
     * @mbg.generated Sun Jun 16 00:56:30 ICT 2024
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.historygiaodich
     *
     * @mbg.generated Sun Jun 16 00:56:30 ICT 2024
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.historygiaodich
     *
     * @mbg.generated Sun Jun 16 00:56:30 ICT 2024
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.historygiaodich
     *
     * @mbg.generated Sun Jun 16 00:56:30 ICT 2024
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.historygiaodich
     *
     * @mbg.generated Sun Jun 16 00:56:30 ICT 2024
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.historygiaodich
     *
     * @mbg.generated Sun Jun 16 00:56:30 ICT 2024
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dbo.historygiaodich
     *
     * @mbg.generated Sun Jun 16 00:56:30 ICT 2024
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdgiaodichIsNull() {
            addCriterion("idgiaodich is null");
            return (Criteria) this;
        }

        public Criteria andIdgiaodichIsNotNull() {
            addCriterion("idgiaodich is not null");
            return (Criteria) this;
        }

        public Criteria andIdgiaodichEqualTo(Integer value) {
            addCriterion("idgiaodich =", value, "idgiaodich");
            return (Criteria) this;
        }

        public Criteria andIdgiaodichNotEqualTo(Integer value) {
            addCriterion("idgiaodich <>", value, "idgiaodich");
            return (Criteria) this;
        }

        public Criteria andIdgiaodichGreaterThan(Integer value) {
            addCriterion("idgiaodich >", value, "idgiaodich");
            return (Criteria) this;
        }

        public Criteria andIdgiaodichGreaterThanOrEqualTo(Integer value) {
            addCriterion("idgiaodich >=", value, "idgiaodich");
            return (Criteria) this;
        }

        public Criteria andIdgiaodichLessThan(Integer value) {
            addCriterion("idgiaodich <", value, "idgiaodich");
            return (Criteria) this;
        }

        public Criteria andIdgiaodichLessThanOrEqualTo(Integer value) {
            addCriterion("idgiaodich <=", value, "idgiaodich");
            return (Criteria) this;
        }

        public Criteria andIdgiaodichIn(List<Integer> values) {
            addCriterion("idgiaodich in", values, "idgiaodich");
            return (Criteria) this;
        }

        public Criteria andIdgiaodichNotIn(List<Integer> values) {
            addCriterion("idgiaodich not in", values, "idgiaodich");
            return (Criteria) this;
        }

        public Criteria andIdgiaodichBetween(Integer value1, Integer value2) {
            addCriterion("idgiaodich between", value1, value2, "idgiaodich");
            return (Criteria) this;
        }

        public Criteria andIdgiaodichNotBetween(Integer value1, Integer value2) {
            addCriterion("idgiaodich not between", value1, value2, "idgiaodich");
            return (Criteria) this;
        }

        public Criteria andMagiaodichIsNull() {
            addCriterion("magiaodich is null");
            return (Criteria) this;
        }

        public Criteria andMagiaodichIsNotNull() {
            addCriterion("magiaodich is not null");
            return (Criteria) this;
        }

        public Criteria andMagiaodichEqualTo(String value) {
            addCriterion("magiaodich =", value, "magiaodich");
            return (Criteria) this;
        }

        public Criteria andMagiaodichNotEqualTo(String value) {
            addCriterion("magiaodich <>", value, "magiaodich");
            return (Criteria) this;
        }

        public Criteria andMagiaodichGreaterThan(String value) {
            addCriterion("magiaodich >", value, "magiaodich");
            return (Criteria) this;
        }

        public Criteria andMagiaodichGreaterThanOrEqualTo(String value) {
            addCriterion("magiaodich >=", value, "magiaodich");
            return (Criteria) this;
        }

        public Criteria andMagiaodichLessThan(String value) {
            addCriterion("magiaodich <", value, "magiaodich");
            return (Criteria) this;
        }

        public Criteria andMagiaodichLessThanOrEqualTo(String value) {
            addCriterion("magiaodich <=", value, "magiaodich");
            return (Criteria) this;
        }

        public Criteria andMagiaodichLike(String value) {
            addCriterion("magiaodich like", value, "magiaodich");
            return (Criteria) this;
        }

        public Criteria andMagiaodichNotLike(String value) {
            addCriterion("magiaodich not like", value, "magiaodich");
            return (Criteria) this;
        }

        public Criteria andMagiaodichIn(List<String> values) {
            addCriterion("magiaodich in", values, "magiaodich");
            return (Criteria) this;
        }

        public Criteria andMagiaodichNotIn(List<String> values) {
            addCriterion("magiaodich not in", values, "magiaodich");
            return (Criteria) this;
        }

        public Criteria andMagiaodichBetween(String value1, String value2) {
            addCriterion("magiaodich between", value1, value2, "magiaodich");
            return (Criteria) this;
        }

        public Criteria andMagiaodichNotBetween(String value1, String value2) {
            addCriterion("magiaodich not between", value1, value2, "magiaodich");
            return (Criteria) this;
        }

        public Criteria andNgaygiaodichIsNull() {
            addCriterion("ngaygiaodich is null");
            return (Criteria) this;
        }

        public Criteria andNgaygiaodichIsNotNull() {
            addCriterion("ngaygiaodich is not null");
            return (Criteria) this;
        }

        public Criteria andNgaygiaodichEqualTo(Date value) {
            addCriterionForJDBCDate("ngaygiaodich =", value, "ngaygiaodich");
            return (Criteria) this;
        }

        public Criteria andNgaygiaodichNotEqualTo(Date value) {
            addCriterionForJDBCDate("ngaygiaodich <>", value, "ngaygiaodich");
            return (Criteria) this;
        }

        public Criteria andNgaygiaodichGreaterThan(Date value) {
            addCriterionForJDBCDate("ngaygiaodich >", value, "ngaygiaodich");
            return (Criteria) this;
        }

        public Criteria andNgaygiaodichGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ngaygiaodich >=", value, "ngaygiaodich");
            return (Criteria) this;
        }

        public Criteria andNgaygiaodichLessThan(Date value) {
            addCriterionForJDBCDate("ngaygiaodich <", value, "ngaygiaodich");
            return (Criteria) this;
        }

        public Criteria andNgaygiaodichLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ngaygiaodich <=", value, "ngaygiaodich");
            return (Criteria) this;
        }

        public Criteria andNgaygiaodichIn(List<Date> values) {
            addCriterionForJDBCDate("ngaygiaodich in", values, "ngaygiaodich");
            return (Criteria) this;
        }

        public Criteria andNgaygiaodichNotIn(List<Date> values) {
            addCriterionForJDBCDate("ngaygiaodich not in", values, "ngaygiaodich");
            return (Criteria) this;
        }

        public Criteria andNgaygiaodichBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ngaygiaodich between", value1, value2, "ngaygiaodich");
            return (Criteria) this;
        }

        public Criteria andNgaygiaodichNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ngaygiaodich not between", value1, value2, "ngaygiaodich");
            return (Criteria) this;
        }

        public Criteria andMountIsNull() {
            addCriterion("mount is null");
            return (Criteria) this;
        }

        public Criteria andMountIsNotNull() {
            addCriterion("mount is not null");
            return (Criteria) this;
        }

        public Criteria andMountEqualTo(Integer value) {
            addCriterion("mount =", value, "mount");
            return (Criteria) this;
        }

        public Criteria andMountNotEqualTo(Integer value) {
            addCriterion("mount <>", value, "mount");
            return (Criteria) this;
        }

        public Criteria andMountGreaterThan(Integer value) {
            addCriterion("mount >", value, "mount");
            return (Criteria) this;
        }

        public Criteria andMountGreaterThanOrEqualTo(Integer value) {
            addCriterion("mount >=", value, "mount");
            return (Criteria) this;
        }

        public Criteria andMountLessThan(Integer value) {
            addCriterion("mount <", value, "mount");
            return (Criteria) this;
        }

        public Criteria andMountLessThanOrEqualTo(Integer value) {
            addCriterion("mount <=", value, "mount");
            return (Criteria) this;
        }

        public Criteria andMountIn(List<Integer> values) {
            addCriterion("mount in", values, "mount");
            return (Criteria) this;
        }

        public Criteria andMountNotIn(List<Integer> values) {
            addCriterion("mount not in", values, "mount");
            return (Criteria) this;
        }

        public Criteria andMountBetween(Integer value1, Integer value2) {
            addCriterion("mount between", value1, value2, "mount");
            return (Criteria) this;
        }

        public Criteria andMountNotBetween(Integer value1, Integer value2) {
            addCriterion("mount not between", value1, value2, "mount");
            return (Criteria) this;
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dbo.historygiaodich
     *
     * @mbg.generated do_not_delete_during_merge Sun Jun 16 00:56:30 ICT 2024
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dbo.historygiaodich
     *
     * @mbg.generated Sun Jun 16 00:56:30 ICT 2024
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}